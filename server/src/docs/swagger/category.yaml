openapi: 3.0.3
info:
  title: Category API
  version: 1.0.0
  description: API endpoints for category management

paths:
  /categories:
    get:
      tags:
        - Categories
      summary: Get all categories
      description: Retrieve a paginated list of categories
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          description: Number of items per page
          schema:
            type: integer
            default: 10
        - name: sortBy
          in: query
          description: Field to sort by
          schema:
            type: string
            enum: [name, createdAt]
            default: name
        - name: sortOrder
          in: query
          description: Sort order (ascending or descending)
          schema:
            type: string
            enum: [ASC, DESC, asc, desc]
            default: ASC
        - name: search
          in: query
          description: Search categories by name or description
          schema:
            type: string
      responses:
        '200':
          description: List of categories retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Category'
                  - $ref: '#/components/schemas/PaginatedResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    post:
      tags:
        - Categories
      summary: Create a new category
      description: Create a new category (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: "Technology"
                description:
                  type: string
                  example: "Technology-related events and workshops"
      responses:
        '201':
          description: Category created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Category created successfully"
                  category:
                    $ref: '#/components/schemas/Category'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Category name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "Category with this name already exists"
                statusCode: 409
                timestamp: "2025-05-05T12:00:00.000Z"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /categories/{id}:
    get:
      tags:
        - Categories
      summary: Get category by ID
      description: Retrieve a specific category by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Category ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Category retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    $ref: '#/components/schemas/Category'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    put:
      tags:
        - Categories
      summary: Update category
      description: Update a specific category (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Category ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Updated Technology"
                description:
                  type: string
                  example: "Updated description for technology category"
      responses:
        '200':
          description: Category updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Category updated successfully"
                  category:
                    $ref: '#/components/schemas/Category'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          description: Category name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "Category with this name already exists"
                statusCode: 409
                timestamp: "2025-05-05T12:00:00.000Z"
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    delete:
      tags:
        - Categories
      summary: Delete category
      description: Delete a specific category (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Category ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Category deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Category deleted successfully"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          description: Cannot delete category in use
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "Cannot delete category that is associated with events"
                statusCode: 409
                timestamp: "2025-05-05T12:00:00.000Z"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /categories/{id}/events:
    get:
      tags:
        - Categories
      summary: Get events by category
      description: Retrieve all events in a specific category
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Category ID
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          description: Number of items per page
          schema:
            type: integer
            default: 10
        - name: sortBy
          in: query
          description: Field to sort by
          schema:
            type: string
            enum: [title, startDate, endDate, createdAt]
            default: startDate
        - name: sortOrder
          in: query
          description: Sort order (ascending or descending)
          schema:
            type: string
            enum: [ASC, DESC, asc, desc]
            default: ASC
      responses:
        '200':
          description: List of events in category retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Event'
                  - $ref: '#/components/schemas/PaginatedResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "c47ac10b-58cc-4372-a567-0e02b2c3d000"
        name:
          type: string
          example: "Technology"
        description:
          type: string
          example: "Technology-related events and workshops"
        createdAt:
          type: string
          format: date-time
          example: "2025-05-05T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-05T10:30:00Z"
        eventCount:
          type: integer
          example: 15
          description: Number of events in this category
    
    PaginatedResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        pagination:
          type: object
          properties:
            totalItems:
              type: integer
              example: 50
            totalPages:
              type: integer
              example: 5
            currentPage:
              type: integer
              example: 1
            pageSize:
              type: integer
              example: 10
    
    Error:
      type: object
      properties:
        message:
          type: string
        statusCode:
          type: integer
        timestamp:
          type: string
          format: date-time
    
    ValidationError:
      type: object
      properties:
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string